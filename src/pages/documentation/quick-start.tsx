import React from "react";

import { CodeBox } from "../../components";
import { DocumentationPage } from "../../templates";

export type QuickStartProps = {};

const QuickStart: React.FC<QuickStartProps> = () => {
  return (
    <DocumentationPage
      pageName="Быстрый старт"
      pageTitle="Быстрый старт – сделайте первые шаги к подключению ioka"
    >
        <section>
          <h1>Быстрый старт – сделайте первые шаги к подключению ioka</h1>
          <p>Настройте свой аккаунт ioka и сделайте тестовый платеж.</p>
          <p>
            На этой странице представлены инструкции по настройке учетной записи
            ioka, отправке запроса API для первого тестового платежа и установке
            одной из наших серверных библиотек. После этих шагов вы сможете
{" "}
            <a href="/documentation" className="link">
              приступить к интеграции
            </a>
            .
          </p>
        </section>
        <section>
          <h2>Шаг 1. Зарегистрируйте тестовый аккаунт </h2>
          <p>
            Вы можете зарегистрироваться для получения тестовой учетной записи
            здесь:
{" "}
            <a href="https://www.ioka.kz/signup" className="link">
              https://www.ioka.kz/signup
            </a>
          </p>
          <p>
            Тестовая учетная запись позволяет вам получить доступ к тестовому
            Личному кабинету для управления вашей учетной записью ioka в разных
            каналах.
          </p>
          <p>При регистрации вы получите:</p>
          <p>
            <span className="number-list">1</span>
            Учетную запись компании, Моя компания: представляющая ваш бизнес.
          </p>
          <p>
            <span className="number-list">2</span>
            Учетную запись поставщика, Поставщик: здесь обрабатываются ваши
            транзакции и вы получаете выплаты. При необходимости, вы можете
            создать дополнительные учетные записи поставщиков.
          </p>
        </section>
        <section>
          <h2>Шаг 2: Получите ваш ключ API</h2>
          <p>
            Чтобы отправлять платежи ioka, вы будете делать запросы API, которые
            аутентифицируются с помощью ключа API. Чтобы сгенерировать свой ключ
            API:
          </p>
          <p>
            <span className="number-list">1</span>
            Войдите в Личный кабинет.
          </p>
          <p>
            <span className="number-list">2</span>
            Перейдите в Учетная запись
            {">"}
            Учетные данные API и выберите учетные данные для интеграции,
            например ws @ Company. [Учетная запись Моя компания].
          </p>
          <p>
            <span className="number-list">3</span>
В разделе «Аутентификация»
            выберите «Создать новый ключ API»
</p>
          <p>
            <span className="number-list">4</span>
            Скопируйте и надежно сохраните ключ API в своей системе - вы не
            сможете восстановить его позже. Если ваш ключ API утерян или
            взломан, вам необходимо сгенерировать новый.
          </p>
          <p>
            <span className="number-list">5</span>
            Выберите Сохранить внизу страницы.
          </p>
        </section>
        <section>
          <h2>Шаг 3. Сделайте тестовый платеж</h2>
          <p>
            Чтобы убедиться, что ваша учетная запись работает правильно, давайте
            сделаем тестовую оплату банковской картой на сумму 10 000 KZT:
          </p>
          <p>
            В приведенном ниже коде замените
            <CodeBox isInline>YOUR_API_KEY</CodeBox>
            своим ключом API, а Поставщик - именем вашей учетной записи
            продавца. Убедитесь, что вы не меняете значения зашифрованных полей
            - запрос работает только с указанными ниже значениями.
          </p>
        </section>
    </DocumentationPage>
  );
};

export default QuickStart;
