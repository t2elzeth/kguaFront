import React from 'react'

import { DocumentationPage } from '../../templates'

export type ChecklistIntegrationProps = { any }

const ChecklistIntegration: React.FC<ChecklistIntegrationProps> = () => {
  return (
    <DocumentationPage pageName="Чек-лист для интеграции" pageTitle="Чек-лист для интеграции">
      <section>
        <h1>Чек-лист для интеграции</h1>
        <p>Контрольный список для создания интеграции онлайн-платежей с ioka.</p>
        <p>
          Следуйте приведенному ниже контрольному списку, чтобы убедиться, у вас есть полная
          реализация в ioka.
        </p>
      </section>
      <section>
        <h2>Создайте тестовый аккаунт</h2>
        <p>
          <a href="/login" className="link">
            Подключите ioka
          </a>
          , чтобы получить тестовую учетную запись.
        </p>
        <p>
          <span className="number-list">1</span>
          Создайте логин для себя и членов своей команды
        </p>
        <p>
          <span className="number-list">2</span>
          При регистрации вам будет предоставлен логин администратора для вас.
          <a href="/login" className="link">
            Создайте дополнительных пользователей
          </a>
          и поделитесь с членами вашей команды по мере необходимости.
        </p>
        <p>
          <span className="number-list">3</span>
          Скопировать учетные данные API Получите доступ к своим учетным данным тестового API, чтобы
          начать выполнение тестовых транзакций.
        </p>
        <p>
          <span className="number-list">4</span>
          Запросить дополнительные тестовые способы оплаты Добавьте способы оплаты, которые вы
          хотите предложить своим покупателям. Для некоторых способов оплаты может потребоваться
          дополнительная работа по интеграции. Определите структуру тестового аккаунта ioka
          предоставляет двухуровневую структуру учетной записи, которая дает вам большую гибкость.
          Определите начальную структуру для тестирования, которая наилучшим образом представляет
          то, что вы будете делать после обработки в реальном времени. При запуске у вас будет еще
          одна возможность окончательно доработать структуру своего аккаунта.
        </p>
      </section>
      <section>
        <h2>Принимайте оплату</h2>
        <p>
          Задача вашей интеграции с ioka - это возможность совершать платежи и обрабатывать их
          последующие статусы.
        </p>
        <p>
          <span className="number-list">1</span>
          {`Сделать авторизованный платеж\nСовершите успешный платеж с помощью любой из наших интеграций онлайн-платежей.`}
        </p>
        <p>
          <span className="number-list">2</span>
          {`Обработка ошибочных или отклоненных платежей\nУбедитесь, что вы можете обрабатывать ошибочные или отклоненные платежи.`}
        </p>
        <p>
          <span className="number-list">3</span>
          {`Возврат и / или отмена платежа\nВажно справляться с ситуациями, когда вам может потребоваться вернуть деньги или отменить транзакцию пользователя.`}
        </p>
        <p>
          <span className="number-list">4</span>
          {`Создайте токен (необязательно)\nТокенизируйте платежные реквизиты и используйте их снова для последующих транзакций.`}
        </p>
        <p>
          <span className="number-list">5</span>
          {`Интегрируйте дополнительные способы оплаты\nДобавьте в свой аккаунт дополнительные способы оплаты. Также важно, чтобы вы могли обрабатывать различные коды результатов, такие как «в обработке».`}
        </p>
      </section>
      <section>
        <h2>Notification webhooks</h2>
        <p>
          ioka полагается на наши веб-перехватчики уведомлений, чтобы информировать вашу систему о
          статусах платежей и других событиях, которые требуются в некоторых ситуациях, таких как
          знание результата вызова API возврата или получение результата оплаты некоторыми местными
          методами оплаты.
        </p>
        <p>
          <span className="number-list">1</span>
          {`Предоставьте конечную точку для обработки уведомлений\nВам необходимо предоставить конечную точку в вашей системе, чтобы иметь возможность получать наши веб-перехватчики.`}
        </p>
        <p>
          <span className="number-list">2</span>
          {`Настройте веб-перехватчики уведомлений для отправки на конечную точку\nВойдите в свой Личный кабинет, чтобы установить конечную точку обработчика веб-перехватчиков.`}
        </p>
        <p>
          <span className="number-list">3</span>
          {`Получите и примите уведомление\nУспешно обработать и обработать наши различные коды событий уведомления.`}
        </p>
      </section>
      <section>
        <h2>Отчеты и сверка</h2>
        <p>Понимание и анализ наших отчетов имеет решающее значение для сверки.</p>
        <p>
          <span className="number-list">1</span>
          {`Скачайте Отчет о расчетах автоматически\nОтчет о расчетах - это основной отчет о сверке, который создается для каждой выплаты, которую мы делаем вам.`}
        </p>
        <p>
          <span className="number-list">2</span>
          {`Постройте процесс сверки\nМы даем рекомендации, как автоматизировать сверку платежей.`}
        </p>
      </section>
      <section>
        <h2>Начните принимать платежи</h2>
        <p>
          Чтобы начать принимать платежи от покупателей, вам необходимо Активировать ваш аккаунт
          ioka. После того, как вы получите учетные данные для своего Личного кабинета, следуйте
          нашему контрольному списку, чтобы начать принимать платежи.
        </p>
      </section>
    </DocumentationPage>
  )
}

export default ChecklistIntegration
